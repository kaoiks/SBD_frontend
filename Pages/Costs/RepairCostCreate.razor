@page "/costs/create/{id}"
@using Microsoft.Extensions.Logging
@inject ILogger<RepairCostCreate> Logger
@using BlazorApp1.Services
@using BlazorApp1.Data
@inject RepairCostService RepairCostService

@inject NavigationManager NavManager
@inject IToastService toastService
@using Blazored.Toast.Configuration


@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

<EditForm Model="@repairCost"  OnValidSubmit="@HandleValidSubmit">

    <h3>Add Repair Cost</h3>
    <hr />
    <DataAnnotationsValidator />


    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Invoice Number:
        </label>
        <div class="col-sm-5">
            <InputText id="invoice_id" Class="form-control" placeholder="Invoice ID" @bind-Value="repairCost.invoice_id" />
            <ValidationMessage For="@(() => repairCost.invoice_id)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Date:
        </label>
        <div class="col-sm-5">
            <InputDate class="form-control" placeholder="Date" @bind-Value="repairCost.date" />
            <ValidationMessage For="@(() => repairCost.date)"></ValidationMessage>
        </div>
    </div>
    <br />

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Amount:
        </label>
        <div class="col-sm-5">
            <InputNumber class="form-control" placeholder="Amount" @bind-Value="repairCost.amount" step='0.01' />
            <ValidationMessage For="@(() => repairCost.amount)"></ValidationMessage>
        </div>
    </div>

   
    <br />

    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Submit</button>
        </div>
    </div>

    <BlazoredToasts Position="ToastPosition.BottomRight"
                    Timeout="10"
                    IconType="IconType.FontAwesome"
                    SuccessClass="success-toast-override"
                    SuccessIcon="fa fa-thumbs-up"
                    ErrorIcon="fa fa-bug" />

</EditForm>
@code {
    [Parameter]
    public string id { get; set; }

    private FormRepairCost repairCost = new() { date = DateTime.Now};



    private async void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");

        repairCost.repair = Int32.Parse(id);

        var result = await RepairCostService.AddRepairCostAsync(repairCost);

        if (result == null)
        {

        }
        else
        {
            
            toastService.ShowSuccess("RepairCost created successfully.");
            NavManager.NavigateTo("/repairs/"+repairCost.repair);
        }
    }


}


