@page "/vehicles/create"
@using Microsoft.Extensions.Logging
@inject ILogger<VehicleCreate> Logger
@using BlazorApp1.Services
@using BlazorApp1.Data
@inject VehicleService VehicleService
@inject NavigationManager NavManager
@inject IToastService toastService
@using Blazored.Toast.Configuration


@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

<EditForm Model="@vehicle" OnValidSubmit="@HandleValidSubmit">

    <h3>Add Vehicle</h3>
    <hr />
    <DataAnnotationsValidator />


    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            VIN:
        </label>
        <div class="col-sm-5">
            <InputText id="vin" Class="form-control" placeholder="VIN" @bind-Value="vehicle.vin" />
            <ValidationMessage For="@(() => vehicle.vin)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Year of Production:
        </label>
        <div class="col-sm-5">
            <InputNumber class="form-control" placeholder="Year of Production" @bind-Value="vehicle.year_of_production" />
            <ValidationMessage For="@(() => vehicle.year_of_production)"></ValidationMessage>
        </div>
    </div>
    <br />

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Car Review:
        </label>
        <div class="col-sm-5">
            <InputDate class="form-control" placeholder="Car Review" @bind-Value="vehicle.car_review" />
            <ValidationMessage For="@(() => vehicle.car_review)"></ValidationMessage>
        </div>
    </div>

    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Fuel Usage:
        </label>
        <div class="col-sm-5">
            <InputNumber class="form-control" placeholder="Fuel Usage" @bind-Value="vehicle.fuel_usage" />
            <ValidationMessage For="@(() => vehicle.fuel_usage)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Kilometers Done:
        </label>
        <div class="col-sm-5">
            <InputNumber class="form-control" placeholder="Kilometers Done" @bind-Value="vehicle.kilometers_done" />
            <ValidationMessage For="@(() => vehicle.kilometers_done)"></ValidationMessage>
        </div>
    </div>

    
    <br />

    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Submit</button>
        </div>
    </div>

    <BlazoredToasts Position="ToastPosition.BottomRight"
                    Timeout="10"
                    IconType="IconType.FontAwesome"
                    SuccessClass="success-toast-override"
                    SuccessIcon="fa fa-thumbs-up"
                    ErrorIcon="fa fa-bug" />

</EditForm>

@code {



    private FormVehicle vehicle = new() { year_of_production = 2022, car_review = DateTime.Now };

    private async void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");

        vehicle.vin = vehicle.vin.ToUpper();
        var result = await VehicleService.AddVehicleAsync(vehicle);
        if (result == null){

        }
        else{
            toastService.ShowSuccess("Vehicle created successfully.");
            NavManager.NavigateTo("/vehicles");
        }
    }


}