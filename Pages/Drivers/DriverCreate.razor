@page "/drivers/create"
@using Microsoft.Extensions.Logging
@inject ILogger<DriverCreate> Logger
@using BlazorApp1.Services
@using BlazorApp1.Data
@inject DriverService DriverService
@inject AddressService AddressService
@inject NavigationManager NavManager
@inject IToastService toastService
@using Blazored.Toast.Configuration


@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

<EditForm Model="@driver" OnValidSubmit="@HandleValidSubmit">

    <h3>Add Driver</h3>
    <hr />
    <DataAnnotationsValidator />


    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Name:
        </label>
        <div class="col-sm-5">
            <InputText id="name" Class="form-control" placeholder="Name" @bind-Value="driver.name" />
            <ValidationMessage For="@(() => driver.name)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
           Surname:
        </label>
        <div class="col-sm-5">
            <InputText class="form-control" placeholder="Surname" @bind-Value="driver.surname" />
            <ValidationMessage For="@(() => driver.surname)"></ValidationMessage>
        </div>
    </div>
    <br />

    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            PESEL:
        </label>
        <div class="col-sm-5">
            <InputText class="form-control" placeholder="PESEL" @bind-Value="driver.pesel"  />
            <ValidationMessage For="@(() => driver.pesel)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Street:
        </label>
        <div class="col-sm-5">
            <InputText class="form-control" placeholder="Street" @bind-Value="address.street" />
            <ValidationMessage For="@(() => address.street)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            City:
        </label>
        <div class="col-sm-5">
            <InputText class="form-control" placeholder="City" @bind-Value="address.city" />
            <ValidationMessage For="@(() => address.city)"></ValidationMessage>
        </div>
    </div>
     <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Postal Code:
        </label>
        <div class="col-sm-5">
            <InputText class="form-control" placeholder="Postal Code" @bind-Value="address.postal_code" />
            <ValidationMessage For="@(() => address.postal_code)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Date of Birth:
        </label>
        <div class="col-sm-5">
            <InputDate class="form-control" placeholder="Date of Birth" @bind-Value="driver.date_of_birth" />
            <ValidationMessage For="@(() => driver.date_of_birth)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Driver License Number:
        </label>
        <div class="col-sm-5">
            <InputText class="form-control" placeholder="Driver License Number" @bind-Value="driver.driver_license_number" />
            <ValidationMessage For="@(() => driver.driver_license_number)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            Qualification Certificate Exp. Date:
        </label>
        <div class="col-sm-5">
            <InputDate class="form-control" placeholder="Qualification Certificate Expiration Date" @bind-Value="driver.date_qualification_certificate" />
            <ValidationMessage For="@(() => driver.date_qualification_certificate)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">
            BHP Course Exp. Date:
        </label>
        <div class="col-sm-5">
            <InputDate class="form-control" placeholder="BHP Course Expiration Date" @bind-Value="driver.date_bhp_course" />
            <ValidationMessage For="@(() => driver.date_bhp_course)"></ValidationMessage>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">Submit</button>
        </div>
    </div>

    <BlazoredToasts Position="ToastPosition.BottomRight"
                    Timeout="10"
                    IconType="IconType.FontAwesome"
                    SuccessClass="success-toast-override"
                    SuccessIcon="fa fa-thumbs-up"
                    ErrorIcon="fa fa-bug" />

</EditForm>
@code {


    private FormAddress address = new() { type = 2 };

    private FormDriver driver = new() {date_of_birth=DateTime.Now, date_bhp_course=DateTime.Now, date_qualification_certificate=DateTime.Now};

    private async void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");

        var result_address = await AddressService.AddAddressAsync(address);


        driver.address = result_address.id;

        var result = await DriverService.AddDriverAsync(driver);

        if (result == null)
        {

        }
        else
        {
            toastService.ShowSuccess("Driver created successfully.");
            NavManager.NavigateTo("/drivers");
        }
    }


}

