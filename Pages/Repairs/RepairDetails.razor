@page "/repairs/{id}"
<PageTitle>Repairs</PageTitle>

@using BlazorApp1.Data
@using BlazorApp1.Services
@using BlazorTable
@inject RepairService RepairService
@inject RepairCostService RepairCostService
@inject NavigationManager NavManager


@if (repair == null)
{
}
else
{
    <h3>Details of the Selected Repair</h3>
        <hr />
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">
                ID:
            </label>
            <div class="col-sm-5">
                <Text Class="form-control">@repair.id</Text>            
            </div>
        </div>
        <br />
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">
                Date:
            </label>
            <div class="col-sm-5">
                 <Text Class="form-control">@repair.repair_date</Text>             
            </div>
        </div>
        <br />
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">
                Description:
            </label>
            <div class="col-sm-5">
                 <Text Class="form-control">@repair.description</Text>  
            </div>
        </div>
        <br />
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">
                Vehicle:
            </label>
            <div class="col-sm-5">
                 <Text Class="form-control">@repair.vehicle</Text>  
            </div>
        </div>
        <br />

        <div>
        <button class="btn btn-outline-primary" type="button" @onclick="Update_Click">
        Edit
        </button>
        <button class="btn btn-outline-danger" type="button" @onclick="Delete_Click">
            Delete
        </button>
    </div>
        <br />
            <br />
                

}
<br />
<h3>Repair Costs           <a href="costs/create/@id" class="btn btn-primary" role="button">Add Cost</a></h3>
@if (repairCosts == null)
{
<p><em>Loading...</em></p>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col text-center">Repair Cost ID</th>
                <th scope="col text-center">Date</th>
                <th scope="col text-center">Invoice Number</th>
                <th scope="col text-center">Amount</th>
                <th scope="col text-center"></th>

            </tr>
        </thead>
        <tbody>



            
                @foreach (var item in repairCosts)
                {
                <tr>
                <td scope="row">@item.id</td>
                <td scope="row">@item.date</td>
                <td scope="row">@item.invoice_id</td>
                <td scope="row">@item.amount</td>
                    <td scope="row">
                        <button class="btn btn-outline-primary" type="button" @onclick="@(async()=>{await Update_Click(int.Parse(item.id.ToString()));})">
                            Edit
                        </button>
                        <button class="btn btn-outline-danger" type="button" @onclick="@(async()=>{await Delete_Click_2(int.Parse(item.id.ToString()));})">
                        Delete
                        </button>
                       
                    </td>
                </tr>
                }

            

        </tbody>
    </table>
   
}

@code {
    
    [Parameter]
    public string? id { get; set; }


    private RepairCost[]? repairCosts;
    

    private Repair? repair;

  

    protected override async Task OnInitializedAsync()
    {

      


        var repairs_service = await RepairService.GetRepairAsync(id);

        repair = repairs_service;
        repairCosts = repair.repair_costs.ToArray();
    }

    protected async Task Delete_Click()
    {

        await RepairService.DeleteRepairAsync(repair.id);
        NavManager.NavigateTo("/repairs");
    }

    protected async Task Delete_Click_2(int id2)
    {

        await RepairCostService.DeleteRepairCostAsync(id2);
        var repairs_service = await RepairService.GetRepairAsync(id);

        repair = repairs_service;
        repairCosts = repair.repair_costs.ToArray();
        //NavManager.NavigateTo("/repairs/{id}");
    }
    protected async Task Update_Click(int id2)
    {
        NavManager.NavigateTo("/costs/update/" + id2);
    }
    protected async Task Update_Click()
    {
        NavManager.NavigateTo("/repairs/update/" + id);
    }

}

